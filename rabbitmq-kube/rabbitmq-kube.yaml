apiVersion: v1
kind: Namespace
metadata:
  name: test-rabbitmq
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq
  namespace: test-rabbitmq
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-certs
  namespace: test-rabbitmq
type: Opaque
data:
  ca_certificate.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lKQUxmTkVQZDl1MDNDTUEwR0NTcUdTSWIzRFFFQkN3VUFNREV4SURBZUJnTlYKQkFNTUYxUk1VMGRsYmxObGJHWlRhV2R1WldSMFVtOXZkRU5CTVEwd0N3WURWUVFIREFRa0pDUWtNQjRYRFRFNQpNRGN5TWpBeE1qTXpOMW9YRFRJNU1EY3hPVEF4TWpNek4xb3dNVEVnTUI0R0ExVUVBd3dYVkV4VFIyVnVVMlZzClpsTnBaMjVsWkhSU2IyOTBRMEV4RFRBTEJnTlZCQWNNQkNRa0pDUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3RXQURKNXBLTUZ0QXMwQUMxZ3p6TGczc1Raakx2MFJSQnhESFBvcTdrN0tZNwpXWHBPOHRRN0RHQkJFdkxyZ0I3cllOK2d4L0t6aEl0ZThnTFdmeWVuaE5YOWdxblV0YVFIZFg5b1JCaFZJc2s3Ck5vUjZYVTlVSWtEeGlxMzI2K2NyaGN3aER2ODJaQ2lka3ZRMmlCRFNIL1d1OE0vdzBxdkdJNnQ0Q0tNSGptWncKaGpNT0luUis5UURKdFc4UVVDWWxETFE4dWRZbUtmL255bmFJYjZFWTU3cXJESDVCdmRJaG0vQjdtY3B0aVlZZQpCZmFuUFl6RnN6Y3FKTGNlRXBiWUxzQ2lOWWh5UkRxdFprWFIyak93Q0J6Y09lTTVPZ2xFaHpjRVlHcDBWV0c4CnB6N2YvWjZGTkxPamJ5RWVYaFZlWGpoTDdoWENQcGZyWElyRG9qRURBZ01CQUFHallEQmVNQXNHQTFVZER3UUUKQXdJQkJqQWRCZ05WSFE0RUZnUVVHaDBxdktBSmsveUVXNmdRM0NGNHhRNVZ2NE13SHdZRFZSMGpCQmd3Rm9BVQpHaDBxdktBSmsveUVXNmdRM0NGNHhRNVZ2NE13RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWNQMUFZVkdPWGxsSDhFVHN6dGZ4RTF5T3BpcUoxRzROdkhVZFBtcHlzeEUxWmVWdEF2N0wKRXJkNkhYR3ZIT3RIYUlwTDNKS2tIZng5c040aHQ0clRaOEkxa0VsQmxmVHc2ZFpULzJ3Rm00T2N2TlJ4VHYwUQpIeGZrS1B4RVFva0N5UmtQQllrWnBnelprSFdVWkhRMVZzdmNGOHYyYVUrNDQyRjd4bHlZaURkNElCU1V6LzhKCmF4a2hKYzFid3NFZCtYaXEyYzVQVlhhRkc2YnA0SWpicjA4QjlrVndzYTM1U25MZ2E2dDhuOHNZMHFlcUtDc1EKU0JQQWJxcm5hZnV4ZmlUL0pQUVpXeG5DNy9YVGpBNU5ibzlkR3BKSlZzUWtrd1A4cWYwcndZUEFTcE9nekhDMQp1RndXZ0QwdjRhdU5MVjJYTTJZYmZ0U2UyUVVXK2tZMW93PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  server_certificate.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsVENDQW4yZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREF4TVNBd0hnWURWUVFEREJkVVRGTkgKWlc1VFpXeG1VMmxuYm1Wa2RGSnZiM1JEUVRFTk1Bc0dBMVVFQnd3RUpDUWtKREFlRncweE9UQTNNakl3TVRJegpNemRhRncweU9UQTNNVGt3TVRJek16ZGFNREl4SHpBZEJnTlZCQU1NRmtoMVlYTXRUV0ZqUW05dmF5MVFjbTh1CmJHOWpZV3d4RHpBTkJnTlZCQW9NQm5ObGNuWmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTDMzVnBkRHBJRzR2VFVqMWFqM3NtaUVFVjNmbkp3akNySVFKc3oxRHAxSXVIS29ENFNGeXpFYwpzTzZlR0dpYkwzM2ExdjVyMmdqNlNONVZ5N0YrWFFvWXlKTC96bkZUdnFmNThwVVJxZEw0R21qaXV4dlJ0dFprCkpmNVloTk9UZDk2eUtiZy9ObWNqZ29NTG9qdXh1eXBwK0VUeWIrWExTbmtncVM3S3I5MmRrMk9pT1ZnMUkxWnMKOUR0K1NQL1ErVHE3bHR1d2owTkVmQlB5OWRkbjU4Qkh2MXFSYTZkc0VLeTFFNFBTVWg3cVhaV0ZJclR5OVkyaApiS3AyODRvMkFEMThaWUdneUlOWXRrWmkyREpkKzJLOW5ZbE9qYlZVcWlUNG0xU2Y0OXBtVkk5MFlya1FjOVpoCit2K3RTc1pOOFl4RHg2MGxlSE1XUFV4MDlORjBjWGtDQXdFQUFhT0J0akNCc3pBSkJnTlZIUk1FQWpBQU1Bc0cKQTFVZER3UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQkVCZ05WSFJFRVBUQTdnaFpJZFdGegpMVTFoWTBKdmIyc3RVSEp2TG14dlkyRnNnaFpJZFdGekxVMWhZMEp2YjJzdFVISnZMbXh2WTJGc2dnbHNiMk5oCmJHaHZjM1F3SFFZRFZSME9CQllFRkY2b1VJajNoeVhUOEZrWEUxYm01L2lOa2pyeE1COEdBMVVkSXdRWU1CYUEKRkJvZEtyeWdDWlA4aEZ1b0VOd2hlTVVPVmIrRE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2h3TUQrUTZSNApReHFZZzlaVjY3cjMvUG5uTWVEYzVjYUcwL200czlmdmJhM2szRFZ1SjY2N0NCOVVXWHk1TTlISWJjSFRsdEo3CjRDU1oyaXJXZlN2ZHhtSXJTdlVpbGZVa2hHWnFiVTVSaUk5M2dsSFZuRlp3NEtWWFNidlN2d3VFWjVlRWxMK20KcVUreERRdFppd015aUhmQTJBM0hpR0JJNklOZWpldXdpaEh0VkcrQnBheHVOaEhpUzJpWjBkY3ZycEpUaVZXMgpIWFBqR2RBLzNqd1p4YjlQR1ZkRi83TU1RN0o5MFZOQzkvQzVJWXd4TkhRYy8yU1M4UGRuTjlmWFNwRzAyYnZmCkdhTzlmQXN6TExKZ0thTmx3WVhJWDlaR0dLY0FuT0hmWXRMOTFPbFNJV3lBS3BwOENhQjcrd0pRUVdPUzk5dUoKSlpJakJLcmkvVnNzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  server_key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdmZkV2wwT2tnYmk5TlNQVnFQZXlhSVFSWGQrY25DTUtzaEFtelBVT25VaTRjcWdQCmhJWExNUnl3N3A0WWFKc3ZmZHJXL212YUNQcEkzbFhMc1g1ZENoaklrdi9PY1ZPK3AvbnlsUkdwMHZnYWFPSzcKRzlHMjFtUWwvbGlFMDVOMzNySXB1RDgyWnlPQ2d3dWlPN0c3S21uNFJQSnY1Y3RLZVNDcExzcXYzWjJUWTZJNQpXRFVqVm16ME8zNUkvOUQ1T3J1VzI3Q1BRMFI4RS9MMTEyZm53RWUvV3BGcnAyd1FyTFVUZzlKU0h1cGRsWVVpCnRQTDFqYUZzcW5iemlqWUFQWHhsZ2FESWcxaTJSbUxZTWwzN1lyMmRpVTZOdFZTcUpQaWJWSi9qMm1aVWozUmkKdVJCejFtSDYvNjFLeGszeGpFUEhyU1Y0Y3hZOVRIVDAwWFJ4ZVFJREFRQUJBb0lCQUVjV29SdllIMTdBRUdZcgpjOUJZYVRZOWZmWkFNTzRwR3Q2SnRzdHFSVDdNc09HUFRNZE4vanp4dkxCL0R5bE9NWmFLWjN3c1JocW45czdsCkVtWG9vTTZmZWFldy9NTmlFRzN4MWpxOHNtMlZsT1I5UElIcmw5MWcrdXJVbTFoRnprelRKVk9pckN3cW1MT0wKamZtQ3lFVFdCU2RnQmtuYktwSnJpNFJNSzBYbUJHQzFNTjNrZjcvT0xhTDQ1R1lLVy9jUWxCTzNKQkk0YUVteApLb1JzL0FiVklKS1VTMXFSUm1wQTZaczlQOFUxSlVSMWJ6VEpNUXBwVTA3ZmFWQXNFaWJHUllBT1locmJsSUtZCjNUYzJ0WlBvaXF1bjhubEVjTU9OSGtWT1o2UmdwbjhMZ3c1OUZXYU8xVG5YdnZUdVFzSHM0dWFuNVRCZTVDNGsKem5hSFF1VUNnWUVBL09sdCtwN3ZNL0RVNlpYVUVmUmw2bVhjK3BpVWFtTndSeDNENis0SE9iTENVdDg1VGd6Rwo1bXo5Y3JLaEFWQ1Y5WmtpSnlFUi9DNEh1ZHlsQTdzS05QS2RSeUFiaGhyK21WOGR6dTlNd3l3a20yakI0QUg1CmloVWtTSG8zZklmak50NEVLYml1a3lGTWFuSnFFMTJ4RXRYM1htMHpIL1AvbWlkbzR4VzhieThDZ1lFQXdFa20KQUVxTXpnQmZ5NVp1QzJ4c2trbVRLU0ova2tPbFNxN0trVSs3RE5zS01lK3c4azZ0ekRjRXpOclpmM1hscG93Qwp2cTJhNmZNaHc5WlhOaDJoeVJ6SzJEWUpJclF6UDBaajUzNUEzTDhHZ0JXYWpMbEQwNW5sL0xZdUJjZEZzcndZCmgzb1NKcVhjMndCWWJlRVVTYWFkQnpVVkhneXBvbTgrTUJMeHY5Y0NnWUVBMTZRVXdOY1k3M21Ob0dpK3ZGeGQKTllHSzdDU0NqeitmOFJNaEJSNGNEUWN0QjBvTGExQWJtMGNjeHRvbHk2QXhiSW9ZQTdML3lieFpuQkRVcGh5cApkRUhVOWxzYS9Mb3hrUVgzdllSdU9BK0FXdjMwS0pLbWVTVFRuZlNQTU9BUVRLejZjYlJsTFUvNy90cjFOUFB5CjBqT2J5bWhqYWdBNlZPNzdVSHd0QWNNQ2dZRUFzdzJxa0V6YmJ4eVVGNzE5dmE5NkxvTEt3Vnc1bFJiZXZYdWsKYjhuaDhXZXF4N05lZjFSYXJMWnpCdHVuK3ZQckpMcHQ5K2NyUVQxQkxON1VHVFZncVNqaGpwSkswWUVoMDRNVgpsc1JQVy8rWjZ2MnpDK1djemxjWi9jZ2JkUkFKekJVeGRqNXExb2hPNzdRVHBFWWFvVGJBTkt6dWZDdm9iclRPCklQQVRJOE1DZ1lFQXpzeElCTFZUYjNtN0xNeWZsdGN5MUNHaUNHamVYemFYT3ZLck5XSGFyRXJMcDZTV1c3dk8KYzh2UTNaaitXcVpvV20xZndsYWdnZnRLcjE2TkNRZHNlQ1A5Z3BBNW94NkxiZk1Oc05jengyb2hJM1VRNWxyZApqc2NLWUFUZElYOHpvL3FqU0xycVpCd2pTVFBINTBTay9yKzBlM3h1T005STVIMWg4U05YSjdZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
kind: Service
apiVersion: v1
metadata:
  namespace: test-rabbitmq
  name: rabbitmq
  labels:
    app: rabbitmq
    type: LoadBalancer
spec:
  type: NodePort
  ports:
    - name: https
      protocol: TCP
      port: 5671
      targetPort: 5671
      nodePort: 31671
    - name: http
      protocol: TCP
      port: 15672
      targetPort: 15672
      nodePort: 31672
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
      nodePort: 30672
  selector:
    app: rabbitmq
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: test-rabbitmq
data:
  ca_certificate.pem: |
  server_certificate.pem: |
  server_key.pem: |
  enabled_plugins: |
    [rabbitmq_management,rabbitmq_peer_discovery_k8s].
  rabbitmq.conf: |
    ## Cluster formation. See https://www.rabbitmq.com/cluster-formation.html to learn more.
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    ## Should RabbitMQ node name be computed from the pod's hostname or IP address?
    ## IP addresses are not stable, so using [stable] hostnames is recommended when possible.
    ## Set to "hostname" to use pod hostnames.
    ## When this value is changed, so should the variable used to set the RABBITMQ_NODENAME
    ## environment variable.
    cluster_formation.k8s.address_type = ip
    ## How often should node cleanup checks run?
    cluster_formation.node_cleanup.interval = 30
    ## Set to false if automatic removal of unknown/absent nodes
    ## is desired. This can be dangerous, see
    ##  * https://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup
    ##  * https://groups.google.com/forum/#!msg/rabbitmq-users/wuOfzEywHXo/k8z_HWIkBgAJ
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    ## See https://www.rabbitmq.com/ha.html#master-migration-data-locality
    queue_master_locator=min-masters
    ## See https://www.rabbitmq.com/access-control.html#loopback-users
    loopback_users.guest = false

    listeners.ssl.default = 5671

    ssl_options.cacertfile           = /etc/certs/extra/ca_certificate.pem
    ssl_options.certfile             = /etc/certs/extra/server_certificate.pem
    ssl_options.keyfile              = /etc/certs/extra/server_key.pem
    ssl_options.verify               = verify_peer
    ssl_options.fail_if_no_peer_cert = true

---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: test-rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 3
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      containers:
        - name: rabbitmq-k8s
          image: rabbitmq:3.7
          volumeMounts:
            - name: config-volume
              mountPath: /etc/rabbitmq
            - name: rabbitmq-certs
              mountPath: /etc/certs/extra
              readOnly: true
          ports:
            - name: https
              protocol: TCP
              containerPort: 5671
            - name: http
              protocol: TCP
              containerPort: 15672
            - name: amqp
              protocol: TCP
              containerPort: 5672
          livenessProbe:
            exec:
              command: ["rabbitmqctl", "status"]
            initialDelaySeconds: 60
            # See https://www.rabbitmq.com/monitoring.html for monitoring frequency recommendations.
            periodSeconds: 60
            timeoutSeconds: 15
          readinessProbe:
            exec:
              command: ["rabbitmqctl", "status"]
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 10
          imagePullPolicy: Always
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            # See a note on cluster_formation.k8s.address_type in the config file section
            - name: RABBITMQ_NODENAME
              value: "rabbit@$(MY_POD_IP)"
            - name: K8S_SERVICE_NAME
              value: "rabbitmq"
            - name: RABBITMQ_ERLANG_COOKIE
              value: "mycookie"
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: enabled_plugins
                path: enabled_plugins
        - name: rabbitmq-certs
          secret:
            secretName: rabbitmq-certs
